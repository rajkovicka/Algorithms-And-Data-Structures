/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        ListNode *dummy=new ListNode(-1);
        ListNode *curr=dummy;
        ListNode *p=head, *q=nullptr, *r=nullptr, *nextN=head;
        int count;
        while(true){
            count=k;
            while(count>0 && nextN!=nullptr){
                count--;
                nextN=nextN->next;
            }
            if(count==0){
                while(p!=nextN){
                    q=p;
                    p=p->next;
                    q->next=r;
                    r=q;
                }
                curr->next=q;
                curr=head;
                head=p;
            }
            else{
                curr->next=p;
                return dummy->next;
            }
        }
    }
};
