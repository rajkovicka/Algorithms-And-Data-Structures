#include <iostream>
#include <deque>
using namespace std;

void maximumOfAllSubarrays(int a[], int n, int k){
    if(k>n)
        return;
    deque<int> q;
    int i=0;
    while(i<k){
        while(!q.empty() && a[i]>=a[q.back()])
            q.pop_back();
        q.push_back(i);
        i++;
    }
    while(i<n){
        cout<<a[q.front()]<<" ";
        while(q.front()<i-k+1 && !q.empty())
            q.pop_front();
        while(!q.empty() && a[i]>=a[q.back()])
            q.pop_back();
        q.push_back(i);
        i++;
    }
    cout<<a[q.front()]<<endl;
}

int main() {
	//code
	int t,n,k,i;
	cin>>t;
	while(t>0){
	    cin>>n;
	    cin>>k;
	    int a[n];
	    for(i=0;i<n;i++)
	        cin>>a[i];
	    maximumOfAllSubarrays(a,n,k);
	    t--;
	}
	return 0;
}
