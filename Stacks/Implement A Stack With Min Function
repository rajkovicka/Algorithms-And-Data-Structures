/*Please note that it's Function problem i.e.
you need to write your solution in the form of Function(s) only.
Driver Code to call/invoke your function is mentioned above.*/

/*
The structure of the class is as follows
class _stack{
stack<int> s;
int minEle;
public :
    int getMin();
    int pop();
    void push(int);
};
*/
/*returns min element from stack*/
int _stack :: getMin()
{
   //Your code here
   if(s.empty())
        return -1;
   return minEle;
}
/*returns poped element from stack*/
int _stack ::pop()
{
   //Your code here
   if(s.empty())
        return -1;
   int result=s.top();
   int res;
   s.pop();
   if(result<=0){
       res=minEle;
       minEle-=result;
   }
   else
        res=minEle+result;
    return res;
}
/*push element x into the stack*/
void _stack::push(int x)
{
   //Your code here
   if(s.empty()){
        minEle=x;
        s.push(x-minEle);
   }
   else{
       if(minEle>=x){
            s.push(x-minEle);
            minEle=x;
       }
       else
            s.push(x-minEle);
   }
}
